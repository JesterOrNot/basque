name: Compiling ...

on: [pull_request, push]

jobs:
    linux:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2

            - name: Install dependencies.
              run: sudo apt-get update && sudo apt-get -qy install libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev
            - name: make
              run: make

            - uses: actions/upload-artifact@v1
              with:
                  name: basque_linux
                  path: basque

    mac:
        runs-on: macos-latest
        steps:
            - uses: actions/checkout@v2

            - name: Install dependencies.
              run: brew install sdl2 sdl2_image sdl2_mixer sdl2_ttf
            - name: make
              run: make

            - uses: actions/upload-artifact@v1
              with:
                  name: basque_mac
                  path: basque

    windows:
        runs-on: windows-latest
        steps:
            - uses: actions/checkout@v2
            - uses: nuget/setup-nuget@v1
            #- uses: ilammy/msvc-dev-cmd@v1

            - name: Install dependencies.
              run: nuget install sdl2.nuget -NonInteractive -ExcludeVersion -OutputDirectory C:\INCLUDE\; nuget install sdl2_image.nuget -NonInteractive -ExcludeVersion -OutputDirectory C:\INCLUDE\; nuget install sdl2_mixer.nuget -NonInteractive -ExcludeVersion -OutputDirectory C:\INCLUDE\; nuget install sdl2_ttf.nuget -NonInteractive -ExcludeVersion -OutputDirectory C:\INCLUDE\
            - name: Clean up paths to match other platforms.
              run: mkdir C:\INCLUDE\SDL2\; robocopy C:\INCLUDE\sdl2.nuget\build\native\include\ C:\INCLUDE\SDL2\; robocopy C:\INCLUDE\sdl2_image.nuget\build\native\include\ C:\INCLUDE\SDL2\; robocopy C:\INCLUDE\sdl2_mixer.nuget\build\native\include\ C:\INCLUDE\SDL2\; robocopy C:\INCLUDE\sdl2_ttf.nuget\build\native\include\ C:\INCLUDE\SDL2\; if ($LASTEXITCODE -le 7) { exit 0 } else { exit 1 }
            - name: Install VS build tools and LLVM/clang.
              run: choco install visualcpp-build-tools -y; choco install llvm -y
            - name: Refresh enviro/path.
              run: $Env:ChocolateyInstall = Convert-Path "$((Get-Command choco).Path)\..\.."; Import-Module "$Env:ChocolateyInstall\helpers\chocolateyProfile.psm1"; Update-SessionEnvironment
            # - name: Is VCVARSALL real?
            # run: Get-ChildItem -Path "C:\Program Files (x86)\Microsoft Visual Studio\$($VS_EDITION.Name)\" -Filter vcvarsall.bat -Recurse;  Get-ChildItem -Path "C:\Program Files (x86)\Microsoft Visual Studio\$($VS_EDITION.Name)\" -Filter vcvarsall.bat -Recurse | Select-Object -Property FullName -First 1;
            # run: Get-ChildItem -Path "C:\Program Files (x86)\Microsoft Visual Studio\$($VS_EDITION.Name)\" -Filter vcvarsall.bat -Recurse | Select-Object -Property FullName -First 1

            - name: Initialize Visual Studio enviro.
              # run: $VS_EDITION = dir 'C:\Program Files (x86)\Microsoft Visual Studio\' | ? -FilterScript {$_.Name -match "[0-9]*"} | Sort CreationTime | Select Name -First 1; $VCVARSALL = Get-ChildItem -Path "C:\Program Files (x86)\Microsoft Visual Studio\$($VS_EDITION.Name)\" -Filter vcvarsall.bat -Recurse | Select -Property FullName -First 1; cmd /k ""$VCVARSALL.FullName" x64 & powershell"
              run: $VS_EDITION = dir 'C:\Program Files (x86)\Microsoft Visual Studio\' | ? -FilterScript {$_.Name -match "[0-9]*"} | Sort CreationTime | Select Name -First 1; Get-ChildItem -Path "C:\Program Files (x86)\Microsoft Visual Studio\$($VS_EDITION.Name)\" -Filter nmake.exe -Recurse | Select -Property FullName -First 1; $NMAKE = Get-ChildItem -Path "C:\Program Files (x86)\Microsoft Visual Studio\$($VS_EDITION.Name)\" -Filter nmake.exe -Recurse | Select -Property FullName -First 1

            # - name: Initialize Visual Studio enviro.
            # run: $VS_EDITION = dir 'C:\Program Files (x86)\Microsoft Visual Studio\' | ? -FilterScript {$_.Name -match "[0-9]*"} | Sort CreationTime | Select Name -First 1; $VCVARSALL = Get-ChildItem -Path "C:\Program Files (x86)\Microsoft Visual Studio\$($VS_EDITION.Name)\" -Filter vcvarsall.bat -Recurse | Select-Object -Property FullName -First 1; & "$($VCVARSALL.FullName)"
            # run: Get-ChildItem -Path "C:\Program Files (x86)\Microsoft Visual Studio\$($VS_EDITION.name)\" -Filter vcvarsall.bat -Recurse;Get-ChildItem -Path "C:\Program Files (x86)\Microsoft Visual Studio\$($VS_EDITION.name)\" -Filter vcvarsall.bat -Recurse | Select-Object -First 1
            - name: nmake
              run: '$NMAKE.FullName'

            #run: $VS_EDITION = dir 'C:\Program Files (x86)\Microsoft Visual Studio\' | ? -FilterScript {$_.name -match "[0-9]*"} | Sort CreationTime | Select Name -First 1; $VCVARSALL = Get-ChildItem -Path "C:\Program Files (x86)\Microsoft Visual Studio\$($VS_EDITION.name)" -Filter vcvarsall.bat -Recurse | Select-Object -First 1; echo "$VCVARSALL"; echo "$($VCVARSALL)"; & "$($VCVARSALL)" x64; where clang; $Env:CC = "`"C:\Program Files\LLVM\bin\clang.exe`""; nmake /e
            - uses: actions/upload-artifact@v1
              with:
                  name: basque_windows
                  path: basque.exe
